// Generated from BeetlLexer.g4 by ANTLR 4.2.2
package org.beetl.core.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BeetlLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		If=1, For=2, Elsefor=3, Else=4, While=5, Switch=6, Select=7, Return=8, 
		Break=9, Continue=10, Var=11, Directive=12, Case=13, Default=14, Try=15, 
		Catch=16, Ajax=17, LEFT_BRACE=18, RIGHT_BRACE=19, LEFT_PAR=20, RIGHT_PAR=21, 
		LEFT_SQBR=22, RIGHT_SQBR=23, INCREASE=24, DECREASE=25, VIRTUAL=26, ADD=27, 
		MIN=28, MUlTIP=29, DIV=30, MOD=31, EQUAL=32, NOT_EQUAL=33, ASSIN=34, LARGE_EQUAL=35, 
		LARGE=36, LESS_EQUAL=37, LESS=38, NOT=39, AND=40, OR=41, QUESTOIN=42, 
		AT=43, NULL=44, TRUE=45, FALSE=46, END=47, COMMA=48, COLON=49, PERIOD=50, 
		FOR_IN=51, LEFT_TOKEN=52, RIGHT_TOKEN=53, LEFT_TEXT_TOKEN=54, HexLiteral=55, 
		DecimalLiteral=56, OctalLiteral=57, FloatingPointLiteral=58, StringLiteral=59, 
		Identifier=60, WS=61, LINE_COMMENT=62, COMMENT_OPEN=63, COMMENT_TAG=64, 
		COMMENT_END=65, ALL_COMMENT_CHAR=66, Identifier1=67, PERIOD1=68, LEFT_PAR1=69, 
		RIGHT_PAR1=70, COMMA1=71, LEFT_ANGULAR=72, RIGHT_ANGULAR=73, WS1=74, TYPE_END=75;
	public static final int MODE_COMMENT = 1;
	public static final int MODE_COMMENT_TYPE = 2;
	public static String[] modeNames = {
		"DEFAULT_MODE", "MODE_COMMENT", "MODE_COMMENT_TYPE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'if'", "'for'", "'elsefor'", "'else'", "'while'", "'switch'", "'select'", 
		"'return'", "'break'", "'continue'", "'var'", "Directive", "'case'", "'default'", 
		"'try'", "'catch'", "'#ajax'", "'{'", "'}'", "LEFT_PAR", "RIGHT_PAR", 
		"'['", "']'", "'++'", "'--'", "'.~'", "'+'", "'-'", "'*'", "'/'", "'%'", 
		"'=='", "'!='", "'='", "'>='", "LARGE", "'<='", "LESS", "'!'", "'&&'", 
		"'||'", "'?'", "'@'", "'null'", "'true'", "'false'", "';'", "COMMA", "':'", 
		"PERIOD", "'in'", "'<<'", "'>>'", "'<$'", "HexLiteral", "DecimalLiteral", 
		"OctalLiteral", "FloatingPointLiteral", "StringLiteral", "Identifier", 
		"WS", "LINE_COMMENT", "COMMENT_OPEN", "COMMENT_TAG", "COMMENT_END", "ALL_COMMENT_CHAR", 
		"Identifier1", "PERIOD1", "LEFT_PAR1", "RIGHT_PAR1", "COMMA1", "LEFT_ANGULAR", 
		"RIGHT_ANGULAR", "WS1", "TYPE_END"
	};
	public static final String[] ruleNames = {
		"If", "For", "Elsefor", "Else", "While", "Switch", "Select", "Return", 
		"Break", "Continue", "Var", "Directive", "Case", "Default", "Try", "Catch", 
		"Ajax", "LEFT_BRACE", "RIGHT_BRACE", "LEFT_PAR", "RIGHT_PAR", "LEFT_SQBR", 
		"RIGHT_SQBR", "INCREASE", "DECREASE", "VIRTUAL", "ADD", "MIN", "MUlTIP", 
		"DIV", "MOD", "EQUAL", "NOT_EQUAL", "ASSIN", "LARGE_EQUAL", "LARGE", "LESS_EQUAL", 
		"LESS", "NOT", "AND", "OR", "QUESTOIN", "AT", "NULL", "TRUE", "FALSE", 
		"END", "COMMA", "COLON", "PERIOD", "FOR_IN", "LEFT_TOKEN", "RIGHT_TOKEN", 
		"LEFT_TEXT_TOKEN", "HexLiteral", "DecimalLiteral", "OctalLiteral", "HexDigit", 
		"IntegerTypeSuffix", "FloatingPointLiteral", "Exponent", "FloatTypeSuffix", 
		"StringLiteral", "EscapeSequence", "OctalEscape", "UnicodeEscape", "Identifier", 
		"Letter", "JavaIDDigit", "WS", "LINE_COMMENT", "COMMENT_OPEN", "COMMENT_TAG", 
		"COMMENT_END", "COMMENT_END_CHAR", "TYPE_CHAR", "ALL_COMMENT_CHAR", "Identifier1", 
		"PERIOD1", "LEFT_PAR1", "RIGHT_PAR1", "COMMA1", "LEFT_ANGULAR", "RIGHT_ANGULAR", 
		"WS1", "TYPE_END"
	};


		public void notifyListeners(LexerNoViableAltException e) {
			String text = _input.getText(Interval.of(_tokenStartCharIndex, _input.index()));		
			ANTLRErrorListener listener = getErrorListenerDispatch();
			listener.syntaxError(this, null, _tokenStartLine, _tokenStartCharPositionInLine, text, e);
		}


	public BeetlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BeetlLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2M\u028b\b\1\b\1\b"+
		"\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n"+
		"\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21"+
		"\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30"+
		"\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37"+
		"\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t"+
		"*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63"+
		"\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t"+
		"<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4"+
		"H\tH\4I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\t"+
		"S\4T\tT\4U\tU\4V\tV\4W\tW\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\5\r\u0106\n\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25"+
		"\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33"+
		"\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3"+
		"\"\3#\3#\3$\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3+\3"+
		"+\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\61"+
		"\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66"+
		"\3\67\3\67\3\67\38\38\38\68\u0189\n8\r8\168\u018a\38\58\u018e\n8\39\3"+
		"9\39\79\u0193\n9\f9\169\u0196\139\59\u0198\n9\39\59\u019b\n9\3:\3:\6:"+
		"\u019f\n:\r:\16:\u01a0\3:\5:\u01a4\n:\3;\3;\3<\3<\3=\6=\u01ab\n=\r=\16"+
		"=\u01ac\3=\3=\7=\u01b1\n=\f=\16=\u01b4\13=\3=\5=\u01b7\n=\3=\5=\u01ba"+
		"\n=\3=\3=\6=\u01be\n=\r=\16=\u01bf\3=\5=\u01c3\n=\3=\5=\u01c6\n=\3=\6"+
		"=\u01c9\n=\r=\16=\u01ca\3=\3=\5=\u01cf\n=\3=\6=\u01d2\n=\r=\16=\u01d3"+
		"\3=\3=\3=\3=\3=\5=\u01db\n=\3=\7=\u01de\n=\f=\16=\u01e1\13=\3=\3=\7=\u01e5"+
		"\n=\f=\16=\u01e8\13=\5=\u01ea\n=\3=\3=\5=\u01ee\n=\3=\6=\u01f1\n=\r=\16"+
		"=\u01f2\3=\5=\u01f6\n=\5=\u01f8\n=\3>\3>\5>\u01fc\n>\3>\6>\u01ff\n>\r"+
		">\16>\u0200\3?\3?\3@\3@\3@\7@\u0208\n@\f@\16@\u020b\13@\3@\3@\3@\3@\7"+
		"@\u0211\n@\f@\16@\u0214\13@\3@\5@\u0217\n@\3A\3A\3A\3A\5A\u021d\nA\3B"+
		"\3B\3B\3B\3B\3B\3B\3B\3B\5B\u0228\nB\3C\3C\3C\3C\3C\3C\3C\3D\3D\3D\7D"+
		"\u0234\nD\fD\16D\u0237\13D\3E\3E\3F\3F\3G\6G\u023e\nG\rG\16G\u023f\3G"+
		"\3G\3H\3H\3H\3H\7H\u0248\nH\fH\16H\u024b\13H\3H\5H\u024e\nH\3H\3H\3H\3"+
		"H\3I\3I\3I\3I\3I\3I\3J\3J\3J\3J\3K\3K\3K\3K\3K\3L\3L\3L\3M\3M\3M\3M\3"+
		"M\3M\3N\3N\3N\3N\3O\3O\3P\3P\3Q\3Q\3R\3R\3R\3R\3S\3S\3T\3T\3U\3U\3V\6"+
		"V\u0281\nV\rV\16V\u0282\3V\3V\3W\3W\3W\3W\3W\2\2X\5\3\7\4\t\5\13\6\r\7"+
		"\17\b\21\t\23\n\25\13\27\f\31\r\33\16\35\17\37\20!\21#\22%\23\'\24)\25"+
		"+\26-\27/\30\61\31\63\32\65\33\67\349\35;\36=\37? A!C\"E#G$I%K&M\'O(Q"+
		")S*U+W,Y-[.]/_\60a\61c\62e\63g\64i\65k\66m\67o8q9s:u;w\2y\2{<}\2\177\2"+
		"\u0081=\u0083\2\u0085\2\u0087\2\u0089>\u008b\2\u008d\2\u008f?\u0091@\u0093"+
		"A\u0095B\u0097C\u0099\2\u009b\2\u009dD\u009fE\u00a1F\u00a3G\u00a5H\u00a7"+
		"I\u00a9J\u00abK\u00adL\u00afM\5\2\3\4\20\4\2ZZzz\5\2\62;CHch\4\2JJjj\4"+
		"\2RRrr\4\2--//\4\2GGgg\6\2\f\f\17\17$$^^\6\2\f\f\17\17))^^\n\2$$))^^d"+
		"dhhppttvv\16\2&&C\\aac|\u00c2\u00d8\u00da\u00f8\u00fa\u2001\u3042\u3191"+
		"\u3302\u3381\u3402\u3d2f\u4e02\ua001\uf902\ufb01\21\2\62;\u0662\u066b"+
		"\u06f2\u06fb\u0968\u0971\u09e8\u09f1\u0a68\u0a71\u0ae8\u0af1\u0b68\u0b71"+
		"\u0be9\u0bf1\u0c68\u0c71\u0ce8\u0cf1\u0d68\u0d71\u0e52\u0e5b\u0ed2\u0edb"+
		"\u1042\u104b\5\2\13\f\16\17\"\"\4\2\f\f\17\17\5\2\13\13\16\17\"\"\u02ab"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2"+
		"\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2{\3\2\2\2\2\u0081\3\2\2\2\2\u0089\3"+
		"\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\3\u0095\3\2\2\2"+
		"\3\u0097\3\2\2\2\3\u009d\3\2\2\2\4\u009f\3\2\2\2\4\u00a1\3\2\2\2\4\u00a3"+
		"\3\2\2\2\4\u00a5\3\2\2\2\4\u00a7\3\2\2\2\4\u00a9\3\2\2\2\4\u00ab\3\2\2"+
		"\2\4\u00ad\3\2\2\2\4\u00af\3\2\2\2\5\u00b1\3\2\2\2\7\u00b4\3\2\2\2\t\u00b8"+
		"\3\2\2\2\13\u00c0\3\2\2\2\r\u00c5\3\2\2\2\17\u00cb\3\2\2\2\21\u00d2\3"+
		"\2\2\2\23\u00d9\3\2\2\2\25\u00e0\3\2\2\2\27\u00e6\3\2\2\2\31\u00ef\3\2"+
		"\2\2\33\u0105\3\2\2\2\35\u0107\3\2\2\2\37\u010c\3\2\2\2!\u0114\3\2\2\2"+
		"#\u0118\3\2\2\2%\u011e\3\2\2\2\'\u0124\3\2\2\2)\u0126\3\2\2\2+\u0128\3"+
		"\2\2\2-\u012a\3\2\2\2/\u012c\3\2\2\2\61\u012e\3\2\2\2\63\u0130\3\2\2\2"+
		"\65\u0133\3\2\2\2\67\u0136\3\2\2\29\u0139\3\2\2\2;\u013b\3\2\2\2=\u013d"+
		"\3\2\2\2?\u013f\3\2\2\2A\u0141\3\2\2\2C\u0143\3\2\2\2E\u0146\3\2\2\2G"+
		"\u0149\3\2\2\2I\u014b\3\2\2\2K\u014e\3\2\2\2M\u0150\3\2\2\2O\u0153\3\2"+
		"\2\2Q\u0155\3\2\2\2S\u0157\3\2\2\2U\u015a\3\2\2\2W\u015d\3\2\2\2Y\u015f"+
		"\3\2\2\2[\u0161\3\2\2\2]\u0166\3\2\2\2_\u016b\3\2\2\2a\u0171\3\2\2\2c"+
		"\u0173\3\2\2\2e\u0175\3\2\2\2g\u0177\3\2\2\2i\u0179\3\2\2\2k\u017c\3\2"+
		"\2\2m\u017f\3\2\2\2o\u0182\3\2\2\2q\u0185\3\2\2\2s\u0197\3\2\2\2u\u019c"+
		"\3\2\2\2w\u01a5\3\2\2\2y\u01a7\3\2\2\2{\u01f7\3\2\2\2}\u01f9\3\2\2\2\177"+
		"\u0202\3\2\2\2\u0081\u0216\3\2\2\2\u0083\u021c\3\2\2\2\u0085\u0227\3\2"+
		"\2\2\u0087\u0229\3\2\2\2\u0089\u0230\3\2\2\2\u008b\u0238\3\2\2\2\u008d"+
		"\u023a\3\2\2\2\u008f\u023d\3\2\2\2\u0091\u0243\3\2\2\2\u0093\u0253\3\2"+
		"\2\2\u0095\u0259\3\2\2\2\u0097\u025d\3\2\2\2\u0099\u0262\3\2\2\2\u009b"+
		"\u0265\3\2\2\2\u009d\u026b\3\2\2\2\u009f\u026f\3\2\2\2\u00a1\u0271\3\2"+
		"\2\2\u00a3\u0273\3\2\2\2\u00a5\u0275\3\2\2\2\u00a7\u0279\3\2\2\2\u00a9"+
		"\u027b\3\2\2\2\u00ab\u027d\3\2\2\2\u00ad\u0280\3\2\2\2\u00af\u0286\3\2"+
		"\2\2\u00b1\u00b2\7k\2\2\u00b2\u00b3\7h\2\2\u00b3\6\3\2\2\2\u00b4\u00b5"+
		"\7h\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7\7t\2\2\u00b7\b\3\2\2\2\u00b8\u00b9"+
		"\7g\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb\7u\2\2\u00bb\u00bc\7g\2\2\u00bc"+
		"\u00bd\7h\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7t\2\2\u00bf\n\3\2\2\2\u00c0"+
		"\u00c1\7g\2\2\u00c1\u00c2\7n\2\2\u00c2\u00c3\7u\2\2\u00c3\u00c4\7g\2\2"+
		"\u00c4\f\3\2\2\2\u00c5\u00c6\7y\2\2\u00c6\u00c7\7j\2\2\u00c7\u00c8\7k"+
		"\2\2\u00c8\u00c9\7n\2\2\u00c9\u00ca\7g\2\2\u00ca\16\3\2\2\2\u00cb\u00cc"+
		"\7u\2\2\u00cc\u00cd\7y\2\2\u00cd\u00ce\7k\2\2\u00ce\u00cf\7v\2\2\u00cf"+
		"\u00d0\7e\2\2\u00d0\u00d1\7j\2\2\u00d1\20\3\2\2\2\u00d2\u00d3\7u\2\2\u00d3"+
		"\u00d4\7g\2\2\u00d4\u00d5\7n\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7e\2\2"+
		"\u00d7\u00d8\7v\2\2\u00d8\22\3\2\2\2\u00d9\u00da\7t\2\2\u00da\u00db\7"+
		"g\2\2\u00db\u00dc\7v\2\2\u00dc\u00dd\7w\2\2\u00dd\u00de\7t\2\2\u00de\u00df"+
		"\7p\2\2\u00df\24\3\2\2\2\u00e0\u00e1\7d\2\2\u00e1\u00e2\7t\2\2\u00e2\u00e3"+
		"\7g\2\2\u00e3\u00e4\7c\2\2\u00e4\u00e5\7m\2\2\u00e5\26\3\2\2\2\u00e6\u00e7"+
		"\7e\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9\7p\2\2\u00e9\u00ea\7v\2\2\u00ea"+
		"\u00eb\7k\2\2\u00eb\u00ec\7p\2\2\u00ec\u00ed\7w\2\2\u00ed\u00ee\7g\2\2"+
		"\u00ee\30\3\2\2\2\u00ef\u00f0\7x\2\2\u00f0\u00f1\7c\2\2\u00f1\u00f2\7"+
		"t\2\2\u00f2\32\3\2\2\2\u00f3\u00f4\7F\2\2\u00f4\u00f5\7K\2\2\u00f5\u00f6"+
		"\7T\2\2\u00f6\u00f7\7G\2\2\u00f7\u00f8\7E\2\2\u00f8\u00f9\7V\2\2\u00f9"+
		"\u00fa\7K\2\2\u00fa\u00fb\7X\2\2\u00fb\u0106\7G\2\2\u00fc\u00fd\7f\2\2"+
		"\u00fd\u00fe\7k\2\2\u00fe\u00ff\7t\2\2\u00ff\u0100\7g\2\2\u0100\u0101"+
		"\7e\2\2\u0101\u0102\7v\2\2\u0102\u0103\7k\2\2\u0103\u0104\7x\2\2\u0104"+
		"\u0106\7g\2\2\u0105\u00f3\3\2\2\2\u0105\u00fc\3\2\2\2\u0106\34\3\2\2\2"+
		"\u0107\u0108\7e\2\2\u0108\u0109\7c\2\2\u0109\u010a\7u\2\2\u010a\u010b"+
		"\7g\2\2\u010b\36\3\2\2\2\u010c\u010d\7f\2\2\u010d\u010e\7g\2\2\u010e\u010f"+
		"\7h\2\2\u010f\u0110\7c\2\2\u0110\u0111\7w\2\2\u0111\u0112\7n\2\2\u0112"+
		"\u0113\7v\2\2\u0113 \3\2\2\2\u0114\u0115\7v\2\2\u0115\u0116\7t\2\2\u0116"+
		"\u0117\7{\2\2\u0117\"\3\2\2\2\u0118\u0119\7e\2\2\u0119\u011a\7c\2\2\u011a"+
		"\u011b\7v\2\2\u011b\u011c\7e\2\2\u011c\u011d\7j\2\2\u011d$\3\2\2\2\u011e"+
		"\u011f\7%\2\2\u011f\u0120\7c\2\2\u0120\u0121\7l\2\2\u0121\u0122\7c\2\2"+
		"\u0122\u0123\7z\2\2\u0123&\3\2\2\2\u0124\u0125\7}\2\2\u0125(\3\2\2\2\u0126"+
		"\u0127\7\177\2\2\u0127*\3\2\2\2\u0128\u0129\7*\2\2\u0129,\3\2\2\2\u012a"+
		"\u012b\7+\2\2\u012b.\3\2\2\2\u012c\u012d\7]\2\2\u012d\60\3\2\2\2\u012e"+
		"\u012f\7_\2\2\u012f\62\3\2\2\2\u0130\u0131\7-\2\2\u0131\u0132\7-\2\2\u0132"+
		"\64\3\2\2\2\u0133\u0134\7/\2\2\u0134\u0135\7/\2\2\u0135\66\3\2\2\2\u0136"+
		"\u0137\7\60\2\2\u0137\u0138\7\u0080\2\2\u01388\3\2\2\2\u0139\u013a\7-"+
		"\2\2\u013a:\3\2\2\2\u013b\u013c\7/\2\2\u013c<\3\2\2\2\u013d\u013e\7,\2"+
		"\2\u013e>\3\2\2\2\u013f\u0140\7\61\2\2\u0140@\3\2\2\2\u0141\u0142\7\'"+
		"\2\2\u0142B\3\2\2\2\u0143\u0144\7?\2\2\u0144\u0145\7?\2\2\u0145D\3\2\2"+
		"\2\u0146\u0147\7#\2\2\u0147\u0148\7?\2\2\u0148F\3\2\2\2\u0149\u014a\7"+
		"?\2\2\u014aH\3\2\2\2\u014b\u014c\7@\2\2\u014c\u014d\7?\2\2\u014dJ\3\2"+
		"\2\2\u014e\u014f\7@\2\2\u014fL\3\2\2\2\u0150\u0151\7>\2\2\u0151\u0152"+
		"\7?\2\2\u0152N\3\2\2\2\u0153\u0154\7>\2\2\u0154P\3\2\2\2\u0155\u0156\7"+
		"#\2\2\u0156R\3\2\2\2\u0157\u0158\7(\2\2\u0158\u0159\7(\2\2\u0159T\3\2"+
		"\2\2\u015a\u015b\7~\2\2\u015b\u015c\7~\2\2\u015cV\3\2\2\2\u015d\u015e"+
		"\7A\2\2\u015eX\3\2\2\2\u015f\u0160\7B\2\2\u0160Z\3\2\2\2\u0161\u0162\7"+
		"p\2\2\u0162\u0163\7w\2\2\u0163\u0164\7n\2\2\u0164\u0165\7n\2\2\u0165\\"+
		"\3\2\2\2\u0166\u0167\7v\2\2\u0167\u0168\7t\2\2\u0168\u0169\7w\2\2\u0169"+
		"\u016a\7g\2\2\u016a^\3\2\2\2\u016b\u016c\7h\2\2\u016c\u016d\7c\2\2\u016d"+
		"\u016e\7n\2\2\u016e\u016f\7u\2\2\u016f\u0170\7g\2\2\u0170`\3\2\2\2\u0171"+
		"\u0172\7=\2\2\u0172b\3\2\2\2\u0173\u0174\7.\2\2\u0174d\3\2\2\2\u0175\u0176"+
		"\7<\2\2\u0176f\3\2\2\2\u0177\u0178\7\60\2\2\u0178h\3\2\2\2\u0179\u017a"+
		"\7k\2\2\u017a\u017b\7p\2\2\u017bj\3\2\2\2\u017c\u017d\7>\2\2\u017d\u017e"+
		"\7>\2\2\u017el\3\2\2\2\u017f\u0180\7@\2\2\u0180\u0181\7@\2\2\u0181n\3"+
		"\2\2\2\u0182\u0183\7>\2\2\u0183\u0184\7&\2\2\u0184p\3\2\2\2\u0185\u0186"+
		"\7\62\2\2\u0186\u0188\t\2\2\2\u0187\u0189\5w;\2\u0188\u0187\3\2\2\2\u0189"+
		"\u018a\3\2\2\2\u018a\u0188\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u018d\3\2"+
		"\2\2\u018c\u018e\5y<\2\u018d\u018c\3\2\2\2\u018d\u018e\3\2\2\2\u018er"+
		"\3\2\2\2\u018f\u0198\7\62\2\2\u0190\u0194\4\63;\2\u0191\u0193\4\62;\2"+
		"\u0192\u0191\3\2\2\2\u0193\u0196\3\2\2\2\u0194\u0192\3\2\2\2\u0194\u0195"+
		"\3\2\2\2\u0195\u0198\3\2\2\2\u0196\u0194\3\2\2\2\u0197\u018f\3\2\2\2\u0197"+
		"\u0190\3\2\2\2\u0198\u019a\3\2\2\2\u0199\u019b\5y<\2\u019a\u0199\3\2\2"+
		"\2\u019a\u019b\3\2\2\2\u019bt\3\2\2\2\u019c\u019e\7\62\2\2\u019d\u019f"+
		"\4\629\2\u019e\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0\u019e\3\2\2\2\u01a0"+
		"\u01a1\3\2\2\2\u01a1\u01a3\3\2\2\2\u01a2\u01a4\5y<\2\u01a3\u01a2\3\2\2"+
		"\2\u01a3\u01a4\3\2\2\2\u01a4v\3\2\2\2\u01a5\u01a6\t\3\2\2\u01a6x\3\2\2"+
		"\2\u01a7\u01a8\t\4\2\2\u01a8z\3\2\2\2\u01a9\u01ab\4\62;\2\u01aa\u01a9"+
		"\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ac\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad"+
		"\u01ae\3\2\2\2\u01ae\u01b2\7\60\2\2\u01af\u01b1\4\62;\2\u01b0\u01af\3"+
		"\2\2\2\u01b1\u01b4\3\2\2\2\u01b2\u01b0\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3"+
		"\u01b6\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b5\u01b7\5}>\2\u01b6\u01b5\3\2\2"+
		"\2\u01b6\u01b7\3\2\2\2\u01b7\u01b9\3\2\2\2\u01b8\u01ba\5\177?\2\u01b9"+
		"\u01b8\3\2\2\2\u01b9\u01ba\3\2\2\2\u01ba\u01f8\3\2\2\2\u01bb\u01bd\7\60"+
		"\2\2\u01bc\u01be\4\62;\2\u01bd\u01bc\3\2\2\2\u01be\u01bf\3\2\2\2\u01bf"+
		"\u01bd\3\2\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01c2\3\2\2\2\u01c1\u01c3\5}"+
		">\2\u01c2\u01c1\3\2\2\2\u01c2\u01c3\3\2\2\2\u01c3\u01c5\3\2\2\2\u01c4"+
		"\u01c6\5\177?\2\u01c5\u01c4\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c6\u01f8\3"+
		"\2\2\2\u01c7\u01c9\4\62;\2\u01c8\u01c7\3\2\2\2\u01c9\u01ca\3\2\2\2\u01ca"+
		"\u01c8\3\2\2\2\u01ca\u01cb\3\2\2\2\u01cb\u01cc\3\2\2\2\u01cc\u01ce\5}"+
		">\2\u01cd\u01cf\5\177?\2\u01ce\u01cd\3\2\2\2\u01ce\u01cf\3\2\2\2\u01cf"+
		"\u01f8\3\2\2\2\u01d0\u01d2\4\62;\2\u01d1\u01d0\3\2\2\2\u01d2\u01d3\3\2"+
		"\2\2\u01d3\u01d1\3\2\2\2\u01d3\u01d4\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5"+
		"\u01f8\5\177?\2\u01d6\u01d7\7\62\2\2\u01d7\u01db\7z\2\2\u01d8\u01d9\7"+
		"\62\2\2\u01d9\u01db\7Z\2\2\u01da\u01d6\3\2\2\2\u01da\u01d8\3\2\2\2\u01db"+
		"\u01df\3\2\2\2\u01dc\u01de\5w;\2\u01dd\u01dc\3\2\2\2\u01de\u01e1\3\2\2"+
		"\2\u01df\u01dd\3\2\2\2\u01df\u01e0\3\2\2\2\u01e0\u01e9\3\2\2\2\u01e1\u01df"+
		"\3\2\2\2\u01e2\u01e6\7\60\2\2\u01e3\u01e5\5w;\2\u01e4\u01e3\3\2\2\2\u01e5"+
		"\u01e8\3\2\2\2\u01e6\u01e4\3\2\2\2\u01e6\u01e7\3\2\2\2\u01e7\u01ea\3\2"+
		"\2\2\u01e8\u01e6\3\2\2\2\u01e9\u01e2\3\2\2\2\u01e9\u01ea\3\2\2\2\u01ea"+
		"\u01eb\3\2\2\2\u01eb\u01ed\t\5\2\2\u01ec\u01ee\t\6\2\2\u01ed\u01ec\3\2"+
		"\2\2\u01ed\u01ee\3\2\2\2\u01ee\u01f0\3\2\2\2\u01ef\u01f1\4\62;\2\u01f0"+
		"\u01ef\3\2\2\2\u01f1\u01f2\3\2\2\2\u01f2\u01f0\3\2\2\2\u01f2\u01f3\3\2"+
		"\2\2\u01f3\u01f5\3\2\2\2\u01f4\u01f6\5\177?\2\u01f5\u01f4\3\2\2\2\u01f5"+
		"\u01f6\3\2\2\2\u01f6\u01f8\3\2\2\2\u01f7\u01aa\3\2\2\2\u01f7\u01bb\3\2"+
		"\2\2\u01f7\u01c8\3\2\2\2\u01f7\u01d1\3\2\2\2\u01f7\u01da\3\2\2\2\u01f8"+
		"|\3\2\2\2\u01f9\u01fb\t\7\2\2\u01fa\u01fc\t\6\2\2\u01fb\u01fa\3\2\2\2"+
		"\u01fb\u01fc\3\2\2\2\u01fc\u01fe\3\2\2\2\u01fd\u01ff\4\62;\2\u01fe\u01fd"+
		"\3\2\2\2\u01ff\u0200\3\2\2\2\u0200\u01fe\3\2\2\2\u0200\u0201\3\2\2\2\u0201"+
		"~\3\2\2\2\u0202\u0203\t\4\2\2\u0203\u0080\3\2\2\2\u0204\u0209\7$\2\2\u0205"+
		"\u0208\5\u0083A\2\u0206\u0208\n\b\2\2\u0207\u0205\3\2\2\2\u0207\u0206"+
		"\3\2\2\2\u0208\u020b\3\2\2\2\u0209\u0207\3\2\2\2\u0209\u020a\3\2\2\2\u020a"+
		"\u020c\3\2\2\2\u020b\u0209\3\2\2\2\u020c\u0217\7$\2\2\u020d\u0212\7)\2"+
		"\2\u020e\u0211\5\u0083A\2\u020f\u0211\n\t\2\2\u0210\u020e\3\2\2\2\u0210"+
		"\u020f\3\2\2\2\u0211\u0214\3\2\2\2\u0212\u0210\3\2\2\2\u0212\u0213\3\2"+
		"\2\2\u0213\u0215\3\2\2\2\u0214\u0212\3\2\2\2\u0215\u0217\7)\2\2\u0216"+
		"\u0204\3\2\2\2\u0216\u020d\3\2\2\2\u0217\u0082\3\2\2\2\u0218\u0219\7^"+
		"\2\2\u0219\u021d\t\n\2\2\u021a\u021d\5\u0087C\2\u021b\u021d\5\u0085B\2"+
		"\u021c\u0218\3\2\2\2\u021c\u021a\3\2\2\2\u021c\u021b\3\2\2\2\u021d\u0084"+
		"\3\2\2\2\u021e\u021f\7^\2\2\u021f\u0220\4\62\65\2\u0220\u0221\4\629\2"+
		"\u0221\u0228\4\629\2\u0222\u0223\7^\2\2\u0223\u0224\4\629\2\u0224\u0228"+
		"\4\629\2\u0225\u0226\7^\2\2\u0226\u0228\4\629\2\u0227\u021e\3\2\2\2\u0227"+
		"\u0222\3\2\2\2\u0227\u0225\3\2\2\2\u0228\u0086\3\2\2\2\u0229\u022a\7^"+
		"\2\2\u022a\u022b\7w\2\2\u022b\u022c\5w;\2\u022c\u022d\5w;\2\u022d\u022e"+
		"\5w;\2\u022e\u022f\5w;\2\u022f\u0088\3\2\2\2\u0230\u0235\5\u008bE\2\u0231"+
		"\u0234\5\u008bE\2\u0232\u0234\5\u008dF\2\u0233\u0231\3\2\2\2\u0233\u0232"+
		"\3\2\2\2\u0234\u0237\3\2\2\2\u0235\u0233\3\2\2\2\u0235\u0236\3\2\2\2\u0236"+
		"\u008a\3\2\2\2\u0237\u0235\3\2\2\2\u0238\u0239\t\13\2\2\u0239\u008c\3"+
		"\2\2\2\u023a\u023b\t\f\2\2\u023b\u008e\3\2\2\2\u023c\u023e\t\r\2\2\u023d"+
		"\u023c\3\2\2\2\u023e\u023f\3\2\2\2\u023f\u023d\3\2\2\2\u023f\u0240\3\2"+
		"\2\2\u0240\u0241\3\2\2\2\u0241\u0242\bG\2\2\u0242\u0090\3\2\2\2\u0243"+
		"\u0244\7\61\2\2\u0244\u0245\7\61\2\2\u0245\u0249\3\2\2\2\u0246\u0248\n"+
		"\16\2\2\u0247\u0246\3\2\2\2\u0248\u024b\3\2\2\2\u0249\u0247\3\2\2\2\u0249"+
		"\u024a\3\2\2\2\u024a\u024d\3\2\2\2\u024b\u0249\3\2\2\2\u024c\u024e\7\17"+
		"\2\2\u024d\u024c\3\2\2\2\u024d\u024e\3\2\2\2\u024e\u024f\3\2\2\2\u024f"+
		"\u0250\7\f\2\2\u0250\u0251\3\2\2\2\u0251\u0252\bH\2\2\u0252\u0092\3\2"+
		"\2\2\u0253\u0254\7\61\2\2\u0254\u0255\7,\2\2\u0255\u0256\3\2\2\2\u0256"+
		"\u0257\bI\3\2\u0257\u0258\bI\2\2\u0258\u0094\3\2\2\2\u0259\u025a\5\u009b"+
		"M\2\u025a\u025b\3\2\2\2\u025b\u025c\bJ\4\2\u025c\u0096\3\2\2\2\u025d\u025e"+
		"\5\u0099L\2\u025e\u025f\3\2\2\2\u025f\u0260\bK\5\2\u0260\u0261\bK\2\2"+
		"\u0261\u0098\3\2\2\2\u0262\u0263\7,\2\2\u0263\u0264\7\61\2\2\u0264\u009a"+
		"\3\2\2\2\u0265\u0266\7B\2\2\u0266\u0267\7v\2\2\u0267\u0268\7{\2\2\u0268"+
		"\u0269\7r\2\2\u0269\u026a\7g\2\2\u026a\u009c\3\2\2\2\u026b\u026c\13\2"+
		"\2\2\u026c\u026d\3\2\2\2\u026d\u026e\bN\2\2\u026e\u009e\3\2\2\2\u026f"+
		"\u0270\5\u0089D\2\u0270\u00a0\3\2\2\2\u0271\u0272\7\60\2\2\u0272\u00a2"+
		"\3\2\2\2\u0273\u0274\7*\2\2\u0274\u00a4\3\2\2\2\u0275\u0276\7+\2\2\u0276"+
		"\u0277\3\2\2\2\u0277\u0278\bR\5\2\u0278\u00a6\3\2\2\2\u0279\u027a\7.\2"+
		"\2\u027a\u00a8\3\2\2\2\u027b\u027c\7>\2\2\u027c\u00aa\3\2\2\2\u027d\u027e"+
		"\7@\2\2\u027e\u00ac\3\2\2\2\u027f\u0281\t\17\2\2\u0280\u027f\3\2\2\2\u0281"+
		"\u0282\3\2\2\2\u0282\u0280\3\2\2\2\u0282\u0283\3\2\2\2\u0283\u0284\3\2"+
		"\2\2\u0284\u0285\bV\2\2\u0285\u00ae\3\2\2\2\u0286\u0287\t\16\2\2\u0287"+
		"\u0288\3\2\2\2\u0288\u0289\bW\5\2\u0289\u028a\bW\2\2\u028a\u00b0\3\2\2"+
		"\2.\2\3\4\u0105\u018a\u018d\u0194\u0197\u019a\u01a0\u01a3\u01ac\u01b2"+
		"\u01b6\u01b9\u01bf\u01c2\u01c5\u01ca\u01ce\u01d3\u01da\u01df\u01e6\u01e9"+
		"\u01ed\u01f2\u01f5\u01f7\u01fb\u0200\u0207\u0209\u0210\u0212\u0216\u021c"+
		"\u0227\u0233\u0235\u023f\u0249\u024d\u0282\6\2\3\2\7\3\2\7\4\2\6\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}